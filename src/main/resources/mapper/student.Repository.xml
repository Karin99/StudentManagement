<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentManagement.repository.StudentRepository">

    <!--  受講生の全件検索  -->
    <select id="search" resultType="raisetech.StudentManagement.data.Student">
        SELECT *
        FROM students
    </select>

    <!--  受講生の単一検索  -->
    <select id="searchStudent" resultType="raisetech.StudentManagement.data.Student">
        SELECT *
        FROM students
        WHERE id = #{id}
    </select>

    <!--  受講生コース情報の全件検索  -->
    <select id="searchStudentCourseList" resultType="raisetech.StudentManagement.data.StudentCourse">
        SELECT *
        FROM students_courses
    </select>

    <!--  受講生IDに紐づく受講生コース情報の検索  -->
    <select id="searchStudentCourse" resultType="raisetech.StudentManagement.data.StudentCourse">
        SELECT *
        FROM students_courses
        WHERE student_id = #{studentId}
    </select>

    <!--  受講生の新規登録  -->
    <!--  IDは自動採番  -->
    <insert id="registerStudent" parameterType="raisetech.StudentManagement.data.Student"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO students (name, kana, nickname, email, address, age, gender, remark, is_deleted)
        VALUES (#{name}, #{kana}, #{nickname}, #{email}, #{address}, #{age}, #{gender}, #{remark}, 0)
    </insert>

    <!--  受講生コース情報の新規登録  -->
    <insert id="registerStudentCourse" parameterType="raisetech.StudentManagement.data.StudentCourse">
        INSERT INTO students_courses(student_id, course, start_at, complete_at)
        VALUES (#{studentId}, #{course}, #{startAt}, #{completeAt})
    </insert>

    <!--  受講生情報の更新  -->
    <update id="updateStudent" parameterType="raisetech.StudentManagement.data.Student">
        UPDATE students SET
        name = #{name},
        kana = #{kana}, nickname = #{nickname},
        email = #{email},
        address = #{address},
        age = #{age},
        gender = #{gender},
        remark = #{remark},
        is_deleted = #{deleted}
        WHERE id = #{id}
    </update>

    <!--  受講生IDに紐づいた受講生コース情報のコース名を更新  -->
    <update id="updateStudentCourse" parameterType="raisetech.StudentManagement.data.StudentCourse">
        UPDATE students_courses SET
        course = #{course}
        WHERE course_id = #{courseId}
    </update>

</mapper>